#ifndef COMMAND_H_INCLUDED
#define COMMAND_H_INCLUDED
#include"common.h"
#include"input.h"
#define SOCK_PORT      4321             //端口号
#define BUFFER_SIZE    1024            //缓冲区大小
#define MAX_FILE_SIZE  2000000        //文件大小上限,单位KB


extern int sockfd;
extern struct sockaddr_in s_addr_in;

typedef enum{
                 GET = 1, PUT, SCD, SLS, CD, LS,
                 PWD, SPWD, BYE, CONNECT, HELP,
                 EXIT, NO_MATCH
              }CODE;  //命令码

/*******************************************************
*
* 连接服务端
* ip:点分十进制IP地址
* sock_fd:套接字描述符地址
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_connect(char *ip, int *sock_fd);

/*******************************************************
*
* 从远端服务器下载文件
* src:服务端文件路径
* dst:本地文件路径
* sock_fd:套接字描述符
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_get(const char *src, const char *dst, int sock_fd);

/*******************************************************
*
* 从远端服务器上传文件
* src:本地文件路径
* dst:服务端文件路径
* sock_fd:套接字描述符
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_put(const char *src, const char *dst, int sock_fd);

/*******************************************************
*
* 切换本地路径
* path:指定本地路径
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_cd(char *path);                   //进入当前主机指定目录

/*******************************************************
*
* 列出当前主机指定目录下的内容
* pcmd:命令结构
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_ls(command_line *pcmd);

/*******************************************************
*
* 进入远端服务器目录
* path:服务器目录
* sock_fd:套接字描述符
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_serv_cd(char *path, int sock_fd);

/*******************************************************
*
* 列出指定服务器目录内容
* path:服务端文件路径
* sock_fd:套接字描述符
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_serv_ls(char *path, int sock_fd);

/*******************************************************
*
* 退出服务器，关闭连接
* sock_fd:套接字描述符
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int bye(int sock_fd);

/*******************************************************
*
* 帮助手册
* 返回直:无
* 
*******************************************************/
void showuse();

/*******************************************************
*
* 匹配命令，返回对应的命令代码
* cmdname:命令名
* 返回直:如果连接匹配到命令名，则返回对应代码，否则返回13
*
*******************************************************/
int matchcmd(char *cmdname);    //匹配命令，返回对应的命令代码

/******************************************************
*
* 显示本地当前路径
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_pwd();

/*******************************************************
*
* 显示当前服务端的路径
* sock_fd:套接字描述符
* 返回直:如果连接成功返回0，否则返回-1
*
*******************************************************/
int do_serv_pwd(int sock_fd);

/*******************************************************
*
* 释放命令结构内存
* cmd:命令结构指针
* 返回直:无
*
*******************************************************/
void freeMemory(command_line *cmd);   //释放内存

#endif // COMMAND_H_INCLUDED

